package org.lab.controller;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

public class FrontController extends HttpServlet {
    private static final Logger logger = LogManager.getLogger(FrontController.class);
    private final Map<String, HttpServlet> routes = new HashMap<>();

    @Override
    public void init() throws ServletException {
        // Ініціалізація маршрутів із сервлетами
        try {
            routes.put("/", new LoginServlet());
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        try {
            routes.put("/login", new LoginServlet());
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        try {
            routes.put("/rooms", new RoomsServlet());
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        try {
            routes.put("/admin", new AdminServlet());
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        try {
            routes.put("/profile", new ProfileServlet());
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }

        for (HttpServlet servlet : routes.values()) {
            servlet.init(getServletConfig());
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        dispatch(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        dispatch(request, response);
    }

    private void dispatch(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String uri = request.getServletPath();
        HttpServlet servlet = routes.get(uri);

        if (servlet != null) {
            try {
                servlet.service(request, response);
            } catch (Exception e) {
                logger.error("Error processing request for URI {}: {}", uri, e.getMessage(), e);
                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Server error: " + e.getMessage());
            }
        } else {
            logger.warn("No servlet found for URI: {}", uri);
            response.sendError(HttpServletResponse.SC_NOT_FOUND, "No servlet found for " + uri);
        }
    }

    @Override
    public void destroy() {
        // Очищення сервлетів
        for (HttpServlet servlet : routes.values()) {
            servlet.destroy();
        }
    }
}
